function Result = readXls(obj, FileName)
obj.Excel.DisplayAlerts = 0;
obj.Excel.workbooks.Open(FileName, 0, 1);
Data = directRead(obj.Excel, 'futures');
Result = processData(obj, Data, 'futures');
Data = directRead(obj.Excel, 'options');
Result = [Result processData(obj, Data, 'options')];
obj.Excel.workbooks.Close;
end

function Result = processData(obj, Data, FieldName)
Header = Data(1,:);
%Eliminate untitled columns from Data table and Header
Header = Header(~cell2mat(cellfun(@(x) all(isnan(x)), Header, 'UniformOutput', false)));
Data = Data(:,~cell2mat(cellfun(@(x) all(isnan(x)), Header, 'UniformOutput', false)));
    if size(Data,1) > 1
    Result = '';
    Types = cellfun(@(x)...
        class(x), Data(2,:),...
        'UniformOutput', false);
    Types = strrep(Types, 'char', 'VARCHAR(100)');
    Types = strrep(Types, 'double', 'FLOAT');
 %Check for duplicate columns   
    [~,ia,ic] = unique(Header, 'stable');
    if length(ic) ~= length(ia)
        RepeatInd = [false; diff(ic) ~= 1];
        Header{RepeatInd} = ['short_' Header{RepeatInd}];
    end
    
    TableHeader = cellfun(@(x, y)...
        [x ' ' y ','], Header, Types,...
        'UniformOutput', false);
    TableHeader = [TableHeader{:}];

    exec(obj.Connection,[...
        ' CREATE TABLE IF NOT EXISTS '...
        FieldName...
        ' (' TableHeader...
        ' PRIMARY KEY ( ticker , moment),'...
        ' INDEX ticker_delivery (ticker,delivery_date)'...
        ')'...
        ' ENGINE = MyISAM'...
        ' DEFAULT CHARSET = utf8'...
        ' COLLATE utf8_bin'...
        ]);

    TableInfo =  fetch(obj.Connection,[...
        ' SHOW COLUMNS FROM ' ...
        FieldName...
        ]);
    
    CurrenHeader = TableInfo(:,1)';

    if ~isempty(setxor(CurrenHeader,Header))  
        [AbsentFields, Indexes] = ...
            setdiff(Header, CurrenHeader);
        if ~isempty(AbsentFields)
            TableHeader = cellfun(@(x, y)...
                [x ' ' y], AbsentFields, Types(Indexes),...
                'UniformOutput', false);
            cellfun(@(x) ...
                exec(obj.Connection, [...
                    'ALTER TABLE '...
                    FieldName...
                    ' ADD ' x...
                    ]), TableHeader,...
                'UniformOutput', false);
        end
    end
    
    Data = Data(2:end,:);
    
    Data = checkTimeFormat(Data, strcmp(Header,...
        'moment'),  'DD.mm.YYYY HH:MM:SS');
    Data = checkTimeFormat(Data, strcmp(Header,...
        'delivery_date'),  'DD.mm.YYYY');
      
    NumberIndexes = cell2mat(cellfun(@(x)...
        isa(x, 'double'), Data,...
        'UniformOutput', false));
    Data(NumberIndexes) = cellfun(@(x)...
        {num2str(x)}, Data(NumberIndexes));
    Data(~NumberIndexes) = cellfun(@(x)...
        {strrep(x, '''','' )}, Data(~NumberIndexes));
    Colons = sprintf(', %s', Header{:});
    QueryString ='';
    
    for i=1:size(Data,1)
        CurrentData = sprintf('''%s'',', Data{i,:});
        CurrentData = strrep(CurrentData, '''NaN''', 'NULL');
        QueryString = [QueryString '(' CurrentData(1:end-1) '),'];    
    end
    
    Res = exec(obj.Connection, [...
        ' INSERT INTO '...
        FieldName...
        ' (' Colons(2:end) ')'...
        ' VALUES ' ...
        QueryString(1:end-1)...
        ' ON DUPLICATE KEY UPDATE'...
        ' moment = VALUES(moment)'...    
        ]);
        if ~isempty(Res.message)
            Result = Res.message;
        end
    else
        Result = 'FILE IS EMPTY';
    end
end

function Data = directRead(Excel, Sheet)
    TargetSheet = get(Excel.Worksheets,'item',Sheet); 
    set(TargetSheet, 'Visible','xlSheetVisible'); 
    Activate(TargetSheet);
    Data = Excel.ActiveSheet.UsedRange.Value;
end

function Data = checkTimeFormat(Data, Index, ReferenceFormat)
    try 
       datenum(Data(1,Index),...
          ReferenceFormat);
    catch
       Data(:, Index) = arrayfun(@(x)...
           datestr(datenum(x), ReferenceFormat),...
           Data(:,Index),...
           'UniformOutput', false);
    end
end

