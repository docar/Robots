classdef ContractInfo
    
    properties (Constant)
        Connection = database(DataBase.readSetup('DBName'),...
            'root','selena', 'Vendor','MySQL');
    end
    
    properties
        AllTickers
        KnownTickers
        UnknownTickers
    end
    
    methods
        function obj =  ContractInfo(varargin)
            obj.AllTickers = strtrim( fetch(obj.Connection, [...
                ' SELECT DISTINCT ticker '...
                ' FROM futures '...
                ]));
            obj.KnownTickers = [];
            try
                obj.KnownTickers = strtrim( fetch(obj.Connection, [...
                    ' SELECT ticker '...
                    ' FROM contract_info '...
                    ]));
            catch
                res = exec(obj.Connection, [...
                    ' CREATE TABLE IF NOT EXISTS '...
                    ' contract_info ('...
                    ' ticker CHAR(50), normal_comission FLOAT, '...
                    ' intra_day_comission FLOAT, '...
                    ' price_tick FLOAT, '...
                    ' cost_of_price_tick FLOAT, '...
                    ' contract_size INT, '...
                    ' first_trading_day CHAR(10), '...
                    ' last_trading_day CHAR(10), '...
                    ' delivery_day CHAR(10), '...
                    ' PRIMARY KEY (ticker))'...
                    ' ENGINE = MyISAM'...
                    ]);
                if ~isempty(res)
                    disp(res.message)
                end
            end
            obj.UnknownTickers = setdiff(obj.AllTickers, obj.KnownTickers);
            parfor i=1:length(obj.UnknownTickers)
                expr = 'result';
                while ~isempty(expr)
                    try
                        tic
                        disp(['PROCESSING TICKER ' obj.UnknownTickers{i}])
                        obj.getComission(obj.UnknownTickers{i});
                        disp(['PROCESSING TIME ' num2str(toc) ' SEC'])
                        expr = [];
                    catch expr
                        expr
                    end
                end
            end
        end
        
        function getComission(obj, ContractName)
            ContractPage = urlread(['http://moex.com/en/contract.aspx?code=' ContractName]);
            NormalFee = regexp(ContractPage,...
                '(?<=Contract buy/sell fee, RUB</td><td class=pvalue>)(.*?)(?=</td>)', 'match');
            IntradayFee = regexp(ContractPage,...
                '(?<=Intraday \(scalper\) fee, RUB</td><td class=pvalue>)(.*?)(?=</td>)', 'match');
            PriceTick = regexp(ContractPage,...
                '(?<=Price tick</td><td class=pvalue>)(.*?)(?=</td>)', 'match');
            CostOfPriceTick = regexp(ContractPage,...
                '(?<=Cost of price tick</td><td class=pvalue>)(.*?)(?=</td>)', 'match');
            
            ContractSize = regexp(ContractPage,...
                '(?<=Ñontract size</td><td class=pvalue>)(.*?)(?=<br></td>)', 'match');
            ContractSize = regexp(ContractSize,'[\s]', 'split');
            ContractSize = cell2mat([ContractSize{:}]);
            
            FirstTradingDay = regexp(ContractPage,...
                '(?<=First Trading Day</td><td class=pvalue>)(.*?)(?=</td>)', 'match');
            LastTradingDay = regexp(ContractPage,...
                '(?<=Last Trading Day</td><td class=pvalue>)(.*?)(?=</td>)', 'match');
            DeliveryDay = regexp(ContractPage,...
                '(?<=Delivery</td><td class=pvalue>)(.*?)(?=</td>)', 'match');
             if ~isempty(NormalFee) && ~isempty(IntradayFee) && ~isempty(PriceTick) && ~isempty(CostOfPriceTick)
                res = exec(obj.Connection, [...
                    ' INSERT INTO contract_info '...
                    '(ticker, normal_comission, price_tick, cost_of_price_tick, intra_day_comission, contract_size, first_trading_day, last_trading_day, delivery_day) VALUES '...
                    '(''' ContractName ''', ''' strrep(NormalFee{:}, ',', '.') ''', ''' strrep(PriceTick{:}, ',', '.') ''', ''' strrep(CostOfPriceTick{:}, ',', '.') ''', ''' strrep(IntradayFee{:}, ',', '.') ''', ''' ContractSize  ''', ''' FirstTradingDay{:} ''', ''' LastTradingDay{:} ''', ''' DeliveryDay{:} ''')'...
                    ]);
                if ~isempty(res)
                    disp(res.message)
                end
             end

        end
    end
    
end

